// Code generated by mockery v2.53.2. DO NOT EDIT.

package mocks

import (
	api "myapi/infrastructure/api"

	mock "github.com/stretchr/testify/mock"
)

// StockAPI is an autogenerated mock type for the StockAPI type
type StockAPI struct {
	mock.Mock
}

// GetStocksFromAPI provides a mock function with given fields: nextPage
func (_m *StockAPI) GetStocksFromAPI(nextPage string) (api.StocksResponse, error) {
	ret := _m.Called(nextPage)

	if len(ret) == 0 {
		panic("no return value specified for GetStocksFromAPI")
	}

	var r0 api.StocksResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (api.StocksResponse, error)); ok {
		return rf(nextPage)
	}
	if rf, ok := ret.Get(0).(func(string) api.StocksResponse); ok {
		r0 = rf(nextPage)
	} else {
		r0 = ret.Get(0).(api.StocksResponse)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(nextPage)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewStockAPI creates a new instance of StockAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewStockAPI(t interface {
	mock.TestingT
	Cleanup(func())
}) *StockAPI {
	mock := &StockAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
