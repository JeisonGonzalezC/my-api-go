// Code generated by mockery v2.53.2. DO NOT EDIT.

package mocks

import (
	domain "myapi/internal/domain"

	mock "github.com/stretchr/testify/mock"
)

// TransactionRepository is an autogenerated mock type for the TransactionRepository type
type TransactionRepository struct {
	mock.Mock
}

// CreateTransactionBuy provides a mock function with given fields: transaction
func (_m *TransactionRepository) CreateTransactionBuy(transaction domain.Transaction) domain.Transaction {
	ret := _m.Called(transaction)

	if len(ret) == 0 {
		panic("no return value specified for CreateTransactionBuy")
	}

	var r0 domain.Transaction
	if rf, ok := ret.Get(0).(func(domain.Transaction) domain.Transaction); ok {
		r0 = rf(transaction)
	} else {
		r0 = ret.Get(0).(domain.Transaction)
	}

	return r0
}

// NewTransactionRepository creates a new instance of TransactionRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTransactionRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *TransactionRepository {
	mock := &TransactionRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
